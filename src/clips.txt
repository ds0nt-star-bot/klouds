Switch, Login, Register, App, Dummy


        {state.appsOn.map(app => <App app={app} onClick={onApp} />)}
        {state.appsOff.map(app => <Dummy name={app.name} />)}
  async afterMount(c, el) {
    try {
      let appsOn = await api.apps()
      let appsOff = await api.disabledApps()
      return {
        appsOn: appsOn.data,
        appsOff: appsOff.data
      }
    } catch (error) {
      return { error }
    }
  },

      noob: true,
      appsOn: [],
      appsOff: []

        user: c.state.user,




    function onApp(e, c) {
      setState({
        app: c.props,
        stage: 3
       })
    }


    function onLogin(e, c) {
      console.log('well Hello');
      setState({
        stage: 2
       })
    }

function toggle {
  setState({noob: !state.noob})
}


    <Switch filter={switchFilter}>
let switchFilter = () =>
  (v, k) =>
    (state.noob ? 0 : 1) === k

      <div>
        <h3>Register or {wrap}Login{with:next}</h3>
          <D onClick={toggle} />
          <small {... pop()}> Login </small>

        <Register onLogin={onLogin} /> => onLogin()
      </div>

      <div>
        <h3>
          <small onClick={toggle}> => toggle()
            Register
          </small>
          or Login
        </h3>

        <Login onLogin={onLogin} /> => onLogin()
      </div>
    </Switch>